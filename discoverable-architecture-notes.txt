## Mission

Overall mission is toward monolithic applications for enforcement of architecture and better preparation for evolution to distributed systems, through

1. extending powers of local procedure call via shared memory, to quasi procedure calls (potentially involving a network) via message passing
2. support for input and output stream parameters, to prepare for all kinds of message passing
3. serializable input and output parameters, to prepare for transportation of messages across a network. 4. quasi web requests, to provide alternative request-response protocols resembling http, and also to ease transition to http usage
5. quasi web mail, for deferred processing thanks to automated email thread processors, and "dictionary of callbacks with ttl" idea for simulating deferred processing as immediate processing.

## Apache Thrift

So we can program apache thrift with

QuasiHttpRequest<S, T>
-RequestLine: S
-Body: T
-BodySource: IMessageSource

QuasiHttpResponse<T>
-ResponseLine: int
-Body: T
-BodySource: IMessageSource

S is a thrift struct, in which the fields are of thrift base types: booleans, numbers or string
T is a thrift struct or string or binary

Body must be immutable.
Access to BodySource must be threadsafe.

thrift struct correspond to JSON object.

have a service which saves streams and returns a temp file-based BodySource for us.
name based on uuid and timestamp.
that service has to delete temp files after "MPL" time period.
can also delete files at startup if ephemeral storage is not in use.
